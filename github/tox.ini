[tox]
skipsdist = true
skip_missing_interpreters = true
envlist =

  py{311,3.12.0a7}-dj42
  py{311,3.12.0a7}-dj{main}

; This block of commands finds and removes packaging artifacts at the end of
; every test run.
; See https://www.b-list.org/weblog/2020/feb/03/how-im-testing-2020/
[cleanup]
commands =
  find {toxinidir}/tests -type f -name "*.pyc" -delete
  find {toxinidir}/tests -type d -name "__pycache__" -delete
  find {toxinidir}/core -type f -name "*.pyc" -delete
  find {toxinidir}/core -type d -name "__pycache__" -delete
  find {toxinidir}/core -type f -path "*.egg-info*" -delete
  find {toxinidir}/core -type d -path "*.egg-info" -delete
 ; find {toxinidir}/ -type d -name "__pycache__" -delete  ;This fails.

[pipupgrade]
commands =
  {envpython} -m pip install --upgrade pip

; [testenv:docs]
; basepython=python
; changedir=docs/source
; commands =
;   {[pipupgrade]commands}
;   sphinx-build -b html -d {envtmpdir}/doctrees . {envtmpdir}/html
;   {[cleanup]commands}
; deps = -r{toxinidir}/docs/requirements.txt

[gh-actions]
python =

  3.11: py3.11

[gh-actions:env]
PLATFORM =
  ubuntu-latest: linux
  ; macos-latest: macos

[testenv:mypy]
basepython = python
changedir = {toxinidir}
deps = mypy
commands =
  {[pipupgrade]commands}
  mypy --ignore-missing-imports {toxinidir}/core
  mypy --ignore-missing-imports {toxinidir}/users
  {[cleanup]commands}

[testenv]
allowlist_externals =
  find
  rm
  tests
setenv =
  PYTHONPATH = {toxinidir}
  PYTHONWARNINGS=once::DeprecationWarning
deps =
  dj42: Django>=4.2,<4.3
  djmain: https://github.com/django/django/archive/main.tar.gz
  -r{toxinidir}/requirements.txt
commands =
  # -rP prints stdout to the terminal
  # -v prints a verbose pytest output to the terminal
  {[pipupgrade]commands}
  coverage erase
  coverage run   {posargs:-m  pytest tests -rP -v}
  coverage combine
  coverage report -m
  coverage html
  {[cleanup]commands}

ignore_outcome =
    djmain: True
ignore_errors =
    djmain: True

[pydocstyle]
ignore = D213


; Alternative test runner options. Replace the one above to use it.
; coverage run  {posargs:manage.py test --shuffle --verbosity 2}
; coverage run  {posargs:manage.py test --parallel --shuffle --verbosity 2}

; [flake8]
;   # ignore = Add codes to ignore here.
;   max-line-length = 110
;   max-complexity = 10
;   select = B,C,E,F,W,T4,B9

; Black default formats code line length to 88.  Black doesnt take into account
; text and URL.  Flake max-line-length is 110 to allow for these odd occaisons.

; Examples of flake8 codes.
; E203 	whitespace before ‘,’, ‘;’, or ‘:’
; E266 	too many leading ‘#’ for block comment
; E501 (^) 	line too long (89 > 88 characters)  max-line-length setting.
; W503 (*) 	line break before binary operator
; F403 ‘from module import *’ used; unable to detect undefined names
