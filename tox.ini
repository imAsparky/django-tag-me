[tox]
# Usage: TOX_SKIPSDIST=false TOX_ISOLATED_BUILD=true tox
# Or add them to your environment, .env etc and just run tox.
# - Override for faster dev testing: 
#   TOX_SKIPSDIST=true TOX_ISOLATED_BUILD=false tox
# Comprehensive testing with x-dist:
# - Isolated builds for worker consistency.
# - Full package builds for accurate testing.
skipsdist = {env:TOX_SKIPSDIST:false}
isolated_build = {env:TOX_ISOLATED_BUILD:true}
workdir = ../.tox
skip_missing_interpreters = true
env_list =
    py{310}-dj{40}
    py{310, 311}-dj{41}
    py{310, 311, 312}-dj{42}
    py{310, 311, 312, 313}-dj{50,51,52}
    py{312, 313}-dj{main}
minversion = 4.23.0

# This section controls which environments run in GitHub Actions
[gh-actions]
python =
    3.11: py311-dj42
    3.12: py312-dj51
    3.13: py313-dj52

[testenv]
allowlist_externals =
    find
    rm
    mkdir
    tests
description = run the tests with pytest

passenv=
    TESTING_*

setenv =
    PYTHONPATH = {toxinidir}
    PYTHONWARNINGS = once::DeprecationWarning
    PIP_DISABLE_PIP_VERSION_CHECK = 1

deps =
    dj40: Django>=4.0,<4.1
    dj41: Django>=4.1,<4.2
    dj42: Django>=4.2,<5.0
    dj50: Django>=5.0,<5.1
    dj51: Django>=5.1,<5.2
    djmain: https://github.com/django/django/archive/main.tar.gz
    -r{toxinidir}/requirements.txt

commands =
    {[preclean]commands}
    {[cov_clean]commands}
    {[pipupgrade]commands}
    pytest {tty:--color=yes} {posargs:tests} -v
    {[cleanup]commands}

[preclean]
commands =
    rm -rf .pytest_cache
    rm -rf coverage.xml
    rm -rf htmlcov

[cov_clean]
deps = coverage
commands = coverage erase

[cleanup]
commands =
    # Files can be deleted directly
    find {toxinidir} -type f -name "*.pyc" -delete
    find {toxinidir} -type f -path "*.egg-info*" -delete

    # Directories need forced removal
    find {toxinidir} -type d -name "__pycache__" -exec rm -rf {} +
    find {toxinidir} -type d -path "*.egg-info" -exec rm -rf {} +
    find {toxinidir} -type d -name ".pytest_cache" -exec rm -rf {} +

[pipupgrade]
commands =
    {envpython} -m pip install --upgrade pip

[pytest]
addopts =
    --cov-config=.coveragerc
    --cov=.
    --cov-fail-under=50
    --cov-report term-missing:skip-covered
    --cov-report=xml
    --cov-report=html
    --cov-branch
    --dist loadscope
    --maxfail=6
    --failed-first
    --durations 10
    --numprocesses auto

    ; Ignore test files
    ; --ignore=tests/test_collections.py
    ; --ignore=tests/test_custom_commands.py
    ; --ignore=tests/test_field_mixins.py
    ; --ignore=tests/test_form_field.py
    --ignore=tests/test_form_mixins.py
    ; --ignore=tests/test_helpers.py
    ; --ignore=tests/test_model_field.py
    ; --ignore=tests/test_helpers.py
    --ignore=tests/test_model_field.py
    --ignore=tests/test_models.py
    ; --ignore=tests/test_parser.py
    ; --ignore=tests/test_registry.py
    --ignore=tests/test_widget.py
    ; --ignore=tests/

filterwarnings =
    ignore::DeprecationWarning

DJANGO_SETTINGS_MODULE =tests.settings
testpaths = tests
python_files = tests.py test_*.py tests_*.py *_tests.py
norecursedirs =
    *.egg
    .*
    _darcs
    build
    CVS
    dist
    node_modules
    venv
    {arch}
    build
    _build
    templates
    tmp*

markers =
    slow: slow running test




