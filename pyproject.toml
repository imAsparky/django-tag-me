
[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
authors = [{ name = "Mark Sevelj", email = "mark.sevelj@dunwright.com.au" }]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Environment :: Web Environment",
  "Framework :: Django",
  "Framework :: Django :: 4.0",
  "Framework :: Django :: 4.1",
  "Framework :: Django :: 4.2",
  "Framework :: Django :: 5.0",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: BSD License",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = ["Django>=4.0"]
description = "A simple approach to Django tagging"
keywords = ["Django Tag Me", "Django", "django", "django tagging"]
license = { file = "LICENSE" }
maintainers = [{ name = "Mark Sevelj", email = "mark.sevelj@dunwright.com.au" }]
name = "django-tag-me"
readme = "README.rst"
requires-python = ">=3.10"
version = "0.3.0"

[project.optional-dependencies]
dev=[
  "django-extensions",
  "django-tag-me",
  "hypothesis",
  "pyright",
  "pytest",
]

[project.urls]
Repository = "https://github.com/imAsparky/django-tag-me"
Tracker = "https://github.com/imAsparky/django-tag-me/issues"
# Documentation = "https://django-tag-me.readthedocs.io"

[tool.coverage.run]
omit=[
  'tests/test_*.py',
  # '*/migrations/*'
]
[tool.setuptools]
packages = ["tag_me"]

[tool.semantic_release]
build_command = 'python3 -m build'
changelog_file = "CHANGELOG.md"
commit_message = ":memo: build(version): Bump to version - {version}.\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"
version_variables = [
  "README.rst:Version",
  "tag_me/__init__.py:__version__",
  "pyproject.toml:version",
]
[tool.semantic_release.branches.main]
match = "(main|release)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
  "build", 
  "chore", 
  "ci", 
  "docs", 
  "feat", 
  "fix", 
  "perf", 
  "style", 
  "refactor", 
  "test"
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true

[tool.bandit]
exclude_dirs = ["tests"]
# tests = ["B201", "B301"]
# skips = ["B101", "B601"]

[tool.black]
line-length = 79
target-version = ['py312']
